---
- name: Set facts for the role
  set_fact:
    # Path to the Kubernetes configuration file
    k8s_conf_path: /etc/modules-load.d/k8s.conf
    
    # Sysctl parameters to be configured for Kubernetes networking
    sysctl_params:
      - name: 'net.bridge.bridge-nf-call-iptables'
        value: 1
      - name: 'net.bridge.bridge-nf-call-ip6tables'
        value: 1
      - name: 'net.ipv4.ip_forward'
        value: 1
    
    # URLs for CRI-O repository files
    cri_o_1_repo_url: "https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable/CentOS_8/devel:kubic:libcontainers:stable.repo"
    cri_o_2_repo_url: "https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable:cri-o:{{ VERSION }}/CentOS_8/devel:kubic:libcontainers:stable:cri-o:{{ VERSION }}.repo"

    # Set user home and user name variables
    user_home: "{{ ansible_env.HOME }}"
    user_name: "{{ ansible_env.USER }}"

# Ensure the Firewalld service is not enabled
- name: Disable Firewalld service
  ansible.builtin.systemd:
    name: firewalld
    enabled: no
    state: stopped
  become: true

# Disable all swap spaces
- name: Disable swap if present
  command: swapoff -a
  ignore_errors: yes
  changed_when: false
  become: true

- name: Comment swap entry in fstab
  lineinfile:
    dest: /etc/fstab
    regexp: 'swap'
    state: absent
  become: true

 # Set SELinux mode to permissive
- name: Set SELinux to permissive mode
  ansible.builtin.selinux:
    state: permissive
    policy: targeted
  become: true

- name: Update SELinux config file
  ansible.builtin.lineinfile:
    path: /etc/selinux/config
    regexp: '^SELINUX=enforcing$'
    line: 'SELINUX=permissive'
  become: true

# Create Kubernetes modules configuration file
- name: Configure modules-load.d/k8s.conf
  ansible.builtin.blockinfile:
    path: "{{ k8s_conf_path }}"
    create: yes
    block: |
      overlay
      br_netfilter
  become: true

# Load the specified kernel module
- name: Load kernel modules
  ansible.builtin.modprobe:
    name: "{{ item }}"
  become: true
  loop:
    - overlay
    - br_netfilter

- name: Configure sysctl parameters for Kubernetes
  ansible.builtin.sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    sysctl_set: yes
    state: present
  become: true
  loop: "{{ sysctl_params }}"

# Apply all sysctl parameters immediately
- name: Apply sysctl params
  ansible.builtin.command:
    cmd: sysctl --system
  become: true

#================================================================================================================================
# Install Longhorn requierements
- name: Install Longhorn requierements
  block:
    # Install the iSCSI initiator utilities package
    - name: Install iSCSI initiator utilities
      ansible.builtin.dnf:
        name: "iscsi-initiator-utils"
        state: present
      become: true

    # Ensure iscsid is enabled and started
    - name: Enable and start iscsid service
      ansible.builtin.systemd:
        name: iscsid
        enabled: yes
        state: started
      become: true
  when: (LONGHORN | default(false))

#================================================================================================================================
- name: Add Kubernetes repositories
  ansible.builtin.get_url:
    url: "{{ item }}"
    dest: "/etc/yum.repos.d/{{ item | basename }}"
  become: true
  loop:
    - "{{ cri_o_1_repo_url }}"
    - "{{ cri_o_2_repo_url }}"

- name: Install Cri-O and Cri-Tools
  ansible.builtin.dnf:
    name: "cri-o"
    state: present
  become: true

# Ensure Cri-O is enabled and started
- name: Enable and start Cri-O service
  ansible.builtin.systemd:
    name: crio
    enabled: yes
    state: started
  become: true

- name: Configure Kubernetes repository
  ansible.builtin.blockinfile:
    path: /etc/yum.repos.d/kubernetes.repo
    create: yes
    block: |
      [kubernetes]
      name=Kubernetes
      baseurl=https://pkgs.k8s.io/core:/stable:/v{{ VERSION }}/rpm/
      enabled=1
      gpgcheck=1
      gpgkey=https://pkgs.k8s.io/core:/stable:/v{{ VERSION }}/rpm/repodata/repomd.xml.key
      exclude=kubelet kubeadm kubectl
  become: true

- name: Install kubelet, kubeadm, kubectl
  ansible.builtin.dnf:
    name:
      - kubelet
      - kubeadm
      - kubectl
    state: present
    disable_excludes: kubernetes
  become: true

# Ensure kubelet is enabled and started
- name: Enable and start kubelet service
  ansible.builtin.systemd:
    name: kubelet
    enabled: yes
    state: started
  become: true